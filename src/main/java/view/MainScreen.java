package view;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JTextField;

public class MainScreen extends javax.swing.JFrame implements KeyListener {

    String screen = "";
    int firstEntry = 0, secondEntry = 0;
    String sign = "";
    String operation = "";

    public MainScreen() {
        initComponents();
        //this.addKeyListener(this);
        refreshScreen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCalculator = new javax.swing.JPanel();
        jButtonCE = new javax.swing.JButton();
        jButtonBackSpace = new javax.swing.JButton();
        jTextFieldScreen = new javax.swing.JTextField();
        jPanelNumberPad = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonEquals = new javax.swing.JButton();
        jPanelSigns = new javax.swing.JPanel();
        jButtonPlus = new javax.swing.JButton();
        jButtonMinus = new javax.swing.JButton();
        jButtonTimes = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jPanelMemory = new javax.swing.JPanel();
        jTextFieldMemory = new javax.swing.JTextField();
        jLabelTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanelCalculator.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonCE.setBackground(new java.awt.Color(255, 204, 204));
        jButtonCE.setText("Clear");
        jButtonCE.setToolTipText("");
        jButtonCE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCEMouseClicked(evt);
            }
        });

        jButtonBackSpace.setBackground(new java.awt.Color(255, 255, 204));
        jButtonBackSpace.setText("BkSpc");
        jButtonBackSpace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBackSpaceMouseClicked(evt);
            }
        });

        jTextFieldScreen.setEditable(false);
        jTextFieldScreen.setFont(new java.awt.Font("DialogInput", 2, 36)); // NOI18N
        jTextFieldScreen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jPanelNumberPad.setPreferredSize(new java.awt.Dimension(258, 338));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton1.setText("1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton2.setText("2");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton3.setText("3");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton4.setText("4");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton5.setText("5");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton6.setText("6");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton7.setText("7");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton8.setText("8");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton9.setText("9");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jButton0.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton0.setText("0");
        jButton0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton0MouseClicked(evt);
            }
        });

        jButtonEquals.setBackground(new java.awt.Color(153, 204, 255));
        jButtonEquals.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButtonEquals.setText("=");
        jButtonEquals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEqualsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelNumberPadLayout = new javax.swing.GroupLayout(jPanelNumberPad);
        jPanelNumberPad.setLayout(jPanelNumberPadLayout);
        jPanelNumberPadLayout.setHorizontalGroup(
            jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumberPadLayout.createSequentialGroup()
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelNumberPadLayout.createSequentialGroup()
                        .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );
        jPanelNumberPadLayout.setVerticalGroup(
            jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumberPadLayout.createSequentialGroup()
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNumberPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEquals, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(jButton0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jButtonPlus.setBackground(new java.awt.Color(204, 255, 204));
        jButtonPlus.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jButtonPlus.setText("+");
        jButtonPlus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPlusMouseClicked(evt);
            }
        });

        jButtonMinus.setBackground(new java.awt.Color(204, 255, 204));
        jButtonMinus.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jButtonMinus.setText("-");
        jButtonMinus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMinusMouseClicked(evt);
            }
        });

        jButtonTimes.setBackground(new java.awt.Color(204, 255, 204));
        jButtonTimes.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jButtonTimes.setText("<html>\n&times;\n</html>");
        jButtonTimes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTimesMouseClicked(evt);
            }
        });

        jButtonDivide.setBackground(new java.awt.Color(204, 255, 204));
        jButtonDivide.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jButtonDivide.setText("<html>\n&divide;\n</html>");
        jButtonDivide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDivideMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelSignsLayout = new javax.swing.GroupLayout(jPanelSigns);
        jPanelSigns.setLayout(jPanelSignsLayout);
        jPanelSignsLayout.setHorizontalGroup(
            jPanelSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonMinus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonTimes, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
            .addComponent(jButtonDivide)
        );
        jPanelSignsLayout.setVerticalGroup(
            jPanelSignsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSignsLayout.createSequentialGroup()
                .addComponent(jButtonPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDivide, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
        );

        jTextFieldMemory.setEditable(false);
        jTextFieldMemory.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        jTextFieldMemory.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanelMemoryLayout = new javax.swing.GroupLayout(jPanelMemory);
        jPanelMemory.setLayout(jPanelMemoryLayout);
        jPanelMemoryLayout.setHorizontalGroup(
            jPanelMemoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldMemory, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelMemoryLayout.setVerticalGroup(
            jPanelMemoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextFieldMemory, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("JaCal 1.0");

        javax.swing.GroupLayout jPanelCalculatorLayout = new javax.swing.GroupLayout(jPanelCalculator);
        jPanelCalculator.setLayout(jPanelCalculatorLayout);
        jPanelCalculatorLayout.setHorizontalGroup(
            jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCalculatorLayout.createSequentialGroup()
                        .addComponent(jPanelNumberPad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCalculatorLayout.createSequentialGroup()
                        .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jButtonBackSpace, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCalculatorLayout.setVerticalGroup(
            jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCalculatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCalculatorLayout.createSequentialGroup()
                        .addComponent(jButtonCE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBackSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCalculatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelNumberPad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSigns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCalculator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCalculator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton0MouseClicked
        // TODO add your handling code here:
        if (screen.isEmpty()) {
            jTextFieldScreen.setText(screen + "0");
            screen = "";
        } else {
            if (sign.isEmpty() || sign.equals("bkspc")) {
                screen = screen + "0";
                jTextFieldScreen.setText(screen);
            } else {
                if (sign.equals("equals")) {
                    refreshEntries();
                    refreshOperations();
                }
                screen = "0";
                jTextFieldScreen.setText(screen);
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton0MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "1";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "1";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "1";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-1";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "1";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "1";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "1";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "1";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButtonCEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCEMouseClicked
        // TODO add your handling code here:
        refreshScreen();
        refreshEntries();
        refreshOperations();
        sign = "";
    }//GEN-LAST:event_jButtonCEMouseClicked

    private void jButtonBackSpaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBackSpaceMouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc") || sign.equals("equals")) {
            if (screen.isEmpty()) {
                if (firstEntry == 0) {
                    jTextFieldMemory.setText("");
                } else {
                    screen = Integer.toString(firstEntry);
                    firstEntry = 0;
                    jTextFieldScreen.setText(screen);
                    jTextFieldMemory.setText("");
                }
            } else {
                screen = screen.substring(0, (screen.length() - 1));
                jTextFieldScreen.setText(screen);
                jTextFieldMemory.setText(Integer.toString(firstEntry));
            }
        } else {
            firstEntry = 0;
            operation = "";
            screen = screen.substring(0, (screen.length() - 1));
            jTextFieldScreen.setText(screen);
            jTextFieldMemory.setText("");
        }
        sign = "bkspc";
    }//GEN-LAST:event_jButtonBackSpaceMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "2";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "2";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "2";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-2";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "2";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "2";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "2";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "2";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "3";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "3";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "3";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-3";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "3";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "3";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "3";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "3";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "4";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "4";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "4";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-4";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "4";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "4";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "4";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "4";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "5";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "5";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "5";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-5";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "5";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "5";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "5";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "5";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "6";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "6";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "6";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-6";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "6";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "6";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "6";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "6";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "7";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "7";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "7";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-7";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "7";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "7";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "7";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "7";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "8";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "8";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "8";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-8";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "8";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "8";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "8";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "8";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        // TODO add your handling code here:
        if (sign.isEmpty() || sign.equals("bkspc")) {
            screen = screen + "9";
            jTextFieldScreen.setText(screen);
        } else {
            switch (sign) {
                case "equals" -> {
                    refreshEntries();
                    refreshOperations();
                    screen = "9";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "minus" -> {
                    if (firstEntry == 0) {
                        if (screen.isEmpty()) {
                            screen = "9";
                            jTextFieldScreen.setText(screen);
                        } else {
                            screen = "-9";
                            jTextFieldScreen.setText(screen);
                        }
                    } else {
                        screen = "9";
                        jTextFieldScreen.setText(screen);
                    }
                    break;
                }
                case "plus" -> {
                    screen = "9";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "times" -> {
                    screen = "9";
                    jTextFieldScreen.setText(screen);
                    break;
                }
                case "divide" -> {
                    screen = "9";
                    jTextFieldScreen.setText(screen);
                    break;
                }
            }
        }
        sign = "";
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButtonPlusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPlusMouseClicked
        // TODO add your handling code here:
        switch (sign) {
            case "bkspc" -> {
                break;
            }
            case "equals" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        screen = screen + "+";
                        jTextFieldScreen.setText(screen);
                        screen = "";
                    } else {
                        //do nothing
                    }
                } else {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "+");
                    } else {
                        //do nothing
                    }
                }
                break;
            }
            case "" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        screen = screen + "+";
                        jTextFieldScreen.setText(screen);
                        screen = "";
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        screen = "";
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "+");
                    }
                } else {
                    if (screen.isEmpty()) {
                        screen = screen + "+";
                        jTextFieldScreen.setText(screen);
                        screen = "";
                    } else {
                        switch (operation) {
                            case "plus" -> {
                                firstEntry = sum(firstEntry, Integer.parseInt(screen));
                                screen = Integer.toString(firstEntry);
                                jTextFieldScreen.setText(screen);
                                jTextFieldMemory.setText(Integer.toString(firstEntry) + "+");
                                screen = "";
                                break;
                            }
                            case "minus" -> {
                                secondEntry = Integer.parseInt(screen);
                                if (secondEntry == firstEntry) {
                                    jTextFieldScreen.setText("0");
                                    jTextFieldMemory.setText("");
                                    firstEntry = 0;
                                    screen = "";
                                } else {
                                    screen = Integer.toString(subtraction(firstEntry, secondEntry));
                                    jTextFieldScreen.setText(screen);
                                    firstEntry = Integer.parseInt(screen);
                                    jTextFieldMemory.setText(Integer.toString(firstEntry) + "+");
                                    screen = "";
                                }
                                break;
                            }
                            case "times" -> {
                                break;
                            }
                            case "divide" -> {
                                break;
                            }
                        }
                    }
                }
                break;
            }
            case "plus" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText("");
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        screen = screen + "+";
                        jTextFieldScreen.setText(screen);
                        jTextFieldMemory.setText(Integer.toString(firstEntry));
                    }
                } else {
                    //do nothing
                }
                break;
            }
            case "minus" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText("");
                        jTextFieldScreen.setText("+");
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        screen = screen + "+";
                        jTextFieldScreen.setText(screen);
                        jTextFieldMemory.setText(Integer.toString(firstEntry));
                    }
                } else {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "+");
                    } else {
                        //do nothing
                    }
                }
                break;
            }
            case "times" -> {
                break;
            }
            case "divide" -> {
                break;
            }
        }
        sign = "plus";
        operation = "plus";
    }//GEN-LAST:event_jButtonPlusMouseClicked

    private void jButtonEqualsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEqualsMouseClicked
        // TODO add your handling code here:
        switch (operation) {
            case "bkspc" -> {
                firstEntry = Integer.parseInt(screen);
                jTextFieldMemory.setText(Integer.toString(firstEntry));
                break;
            }
            case "equals" -> {
                if (firstEntry == 0) {
                    jTextFieldScreen.setText(screen);
                } else {
                    if (screen.isEmpty()) {
                        //do nothing
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        jTextFieldMemory.setText(Integer.toString(firstEntry));
                        screen = "";
                    }
                }
                break;
            }
            case "" -> {
                if (screen.isEmpty()) {
                    //happens when screen is "0"
                    jTextFieldScreen.setText(screen);
                } else {
                    firstEntry = Integer.parseInt(screen);
                    jTextFieldMemory.setText(Integer.toString(firstEntry));
                    screen = "";
                }
            }
            case "plus" -> {
                if (firstEntry == 0) {
                    //happens when screen is "0"
                    jTextFieldScreen.setText(screen);
                    jTextFieldMemory.setText("");
                } else {
                    if (screen.isEmpty()) {
                        secondEntry = firstEntry;
                        screen = Integer.toString(sum(firstEntry, secondEntry));
                        jTextFieldScreen.setText(screen);
                        firstEntry = Integer.parseInt(screen);
                        jTextFieldMemory.setText(Integer.toString(firstEntry));
                        screen = "";
                    } else {
                        secondEntry = Integer.parseInt(screen);
                        if (secondEntry == (firstEntry*-1)) {
                            jTextFieldScreen.setText("0");
                            jTextFieldMemory.setText("");
                            firstEntry = 0;
                            screen = "";
                        } else {
                            screen = Integer.toString(sum(firstEntry, secondEntry));
                            jTextFieldScreen.setText(screen);
                            firstEntry = Integer.parseInt(screen);
                            jTextFieldMemory.setText(Integer.toString(firstEntry));
                            screen = "";
                        }
                    }
                }
                break;
            }
            case "minus" -> {
                if (firstEntry == 0) {
                    //happens when screen is "0"
                    jTextFieldScreen.setText(screen);
                    jTextFieldMemory.setText("");
                } else {
                    if (screen.isEmpty()) {
                        //result aways gonna be "0"
                        jTextFieldScreen.setText("0");
                        jTextFieldMemory.setText("");
                        firstEntry = 0;
                        screen = "";
                    } else {
                        secondEntry = Integer.parseInt(screen);
                        if (secondEntry == firstEntry) {
                            screen = Integer.toString(subtraction(firstEntry, secondEntry));
                            if (Integer.parseInt(screen) == 0) {
                                jTextFieldScreen.setText("0");
                                jTextFieldMemory.setText("");
                                firstEntry = 0;
                                screen = "";
                            } else {
                                jTextFieldScreen.setText(screen);
                                firstEntry = Integer.parseInt(screen);
                                jTextFieldMemory.setText(Integer.toString(firstEntry));
                                screen = "";
                            }
                        } else {
                            screen = Integer.toString(subtraction(firstEntry, secondEntry));
                            jTextFieldScreen.setText(screen);
                            firstEntry = Integer.parseInt(screen);
                            jTextFieldMemory.setText(Integer.toString(firstEntry));
                            screen = "";
                        }
                    }
                }
                break;
            }
            case "times" -> {
                break;
            }
            case "divide" -> {
                break;
            }
        }
        sign = "equals";
        operation = "equals";
    }//GEN-LAST:event_jButtonEqualsMouseClicked

    private void jButtonMinusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMinusMouseClicked
        // TODO add your handling code here:
        switch (sign) {
            case "bkspc" -> {
                break;
            }
            case "equals" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        screen = screen + "-";
                        jTextFieldScreen.setText(screen);
                    } else {
                        //do nothing
                    }
                } else {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                    } else {
                        //do nothing
                    }
                }
                break;
            }
            case "" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        screen = screen + "-";
                        jTextFieldScreen.setText(screen);
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        screen = "";
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                    }
                } else {
                    if (screen.isEmpty()) {
                        screen = screen + "-";
                        jTextFieldScreen.setText(screen);
                        screen = "";
                    } else {
                        switch (operation) {
                            case "plus" -> {
                                firstEntry = sum(firstEntry, Integer.parseInt(screen));
                                screen = Integer.toString(firstEntry);
                                jTextFieldScreen.setText(screen);
                                jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                                screen = "";
                                break;
                            }
                            case "minus" -> {
                                secondEntry = Integer.parseInt(screen);
                                if (secondEntry == firstEntry) {
                                    jTextFieldScreen.setText("0");
                                    jTextFieldMemory.setText("");
                                    firstEntry = 0;
                                    screen = "";
                                } else {
                                    screen = Integer.toString(subtraction(firstEntry, secondEntry));
                                    jTextFieldScreen.setText(screen);
                                    firstEntry = Integer.parseInt(screen);
                                    jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                                    screen = "";
                                }
                                break;
                            }
                            case "times" -> {
                                break;
                            }
                            case "divide" -> {
                                break;
                            }
                        }
                    }
                }
                break;
            }
            case "plus" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText("");
                        jTextFieldScreen.setText("-");
                    } else {
                        firstEntry = Integer.parseInt(screen);
                        screen = screen + "-";
                        jTextFieldScreen.setText(screen);
                        jTextFieldMemory.setText(Integer.toString(firstEntry));
                    }
                } else {
                    if (screen.isEmpty()) {
                        jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                    } else {
                        //do nothing
                    }
                }
                break;
            }
            case "minus" -> {
                if (firstEntry == 0) {
                    if (screen.isEmpty()) {
                        jTextFieldScreen.setText(screen + "-");
                        jTextFieldMemory.setText("");
                    } else {
                        if (screen.equals("-")) {
                            //do nothing
                        } else {
                            firstEntry = Integer.parseInt(screen);
                            screen = "";
                            jTextFieldMemory.setText(Integer.toString(firstEntry) + "-");
                        }
                    }
                } else {
                    //do nothing
                }
                break;
            }
            case "times" -> {
                break;
            }
            case "divide" -> {
                break;
            }
        }
        sign = "minus";
        operation = "minus";
    }//GEN-LAST:event_jButtonMinusMouseClicked

    private void jButtonTimesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTimesMouseClicked
        // TODO add your handling code here:
        sign = "times";
        operation = "times";
    }//GEN-LAST:event_jButtonTimesMouseClicked

    private void jButtonDivideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDivideMouseClicked
        // TODO add your handling code here:
        sign = "divide";
        operation = "divide";
    }//GEN-LAST:event_jButtonDivideMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonBackSpace;
    private javax.swing.JButton jButtonCE;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonEquals;
    private javax.swing.JButton jButtonMinus;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JButton jButtonTimes;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelCalculator;
    private javax.swing.JPanel jPanelMemory;
    private javax.swing.JPanel jPanelNumberPad;
    private javax.swing.JPanel jPanelSigns;
    private javax.swing.JTextField jTextFieldMemory;
    private javax.swing.JTextField jTextFieldScreen;
    // End of variables declaration//GEN-END:variables

    private void refreshScreen() {
        screen = "";
        jTextFieldScreen.setText(screen);
    }

    private void refreshEntries() {
        firstEntry = 0;
        secondEntry = 0;
        jTextFieldMemory.setText("");
    }

    private void refreshOperations() {
        sign = "";
        operation = "";
    }

    private int sum(int A, int B) {
        return A + B;
    }

    private int subtraction(int A, int B) {
        return A - B;
    }

    private int multiplication(int A, int B) {
        return A * B;
    }

    private float division(int A, int B) {
        return A / B;
    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
